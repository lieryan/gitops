name: Release
on:
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Docker Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Pull latest image. Build
        # if: startsWith(github.ref, 'refs/tags')
        env:
          latest_image: 305686791668.dkr.ecr.ap-southeast-2.amazonaws.com/gitops:latest
          current_image: 305686791668.dkr.ecr.ap-southeast-2.amazonaws.com/gitops:${{github.event.ref}}
        run: |
          echo ${{secrets.CLUSTER_KEY}} | base64 -d > cluster.key
          docker pull $latest_image
          docker build -t $latest_image --cache-from $latest_image .
          docker push $latest_image
          docker tag  $latest_image $current_image
          docker push $current_image

  publish_helm_chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish_to_pypi:
    name: Publishes tag to pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Build package
        run: python3 -m pip install --user --upgrade twine setuptools wheel &&  python3 setup.py sdist bdist_wheel
      - name: Upload package
        run: python3 -m twine upload dist/* --non-interactive
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}